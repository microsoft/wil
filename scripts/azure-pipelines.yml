# Windows Implementation Library Pipeline

trigger:
- master

jobs:
- job: BuildAndTest
  timeoutInMinutes: 360

  variables:
    compilers: 'clang,msvc'
    architectures: 'x86,x64'
    buildTypes: 'debug,relwithdebinfo'

  strategy:
    matrix:
      ${{each compiler in split(variables.compilers, ',')}}:
        ${{each arch in split(variables.architectures, ',')}}:
          ${{each buildType in split(variables.buildTypes, ',')}}:
            ${{compiler}}-${{arch}}-${{buildType}}:
              compiler: ${{compiler}}
              arch: ${{arch}}
              build-type: ${{buildType}}

  pool:
    vmImage: 'windows-2022'

  steps:
  - script: |
      choco upgrade llvm -y --version=17.0.6
      if %ERRORLEVEL% NEQ 0 goto :eof
      echo ##vso[task.setvariable variable=PATH]%PATH%;C:\Program Files\LLVM\bin
    displayName: 'Install Clang'
    condition: eq(variables['compiler'], 'clang')

  - script: |
      call scripts\call-vcvars.cmd $(arch)
      if %ERRORLEVEL% NEQ 0 goto :eof
      
      call scripts\init.cmd -c $(compiler) -b $(build-type) --fast
      if %ERRORLEVEL% NEQ 0 goto :eof
      
      call scripts\build_all.cmd
    displayName: 'Build $(compiler) $(arch)$(build-type)'

  - script: |
      call scripts\call-vcvars.cmd $(arch)
      set ASAN_WIN_CONTINUE_ON_INTERCEPTION_FAILURE=1
      call scripts\runtests.cmd ~[LocalOnly]
    displayName: 'Test $(compiler) $(arch)$(build-type)'
